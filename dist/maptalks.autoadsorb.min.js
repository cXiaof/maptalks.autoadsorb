/*!
 * maptalks.autoadsorb v0.4.0
 * LICENSE : MIT
 * (c) 2016-2022 maptalks.org
 */
/*!
 * requires maptalks@>=0.46.0 
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("maptalks")):"function"==typeof define&&define.amd?define(["exports","maptalks"],t):t(e.maptalks=e.maptalks||{},e.maptalks)}(this,function(G,o){"use strict";var j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e=6371008.8,n={centimeters:100*e,centimetres:100*e,degrees:e/111325,feet:3.28084*e,inches:39.37*e,kilometers:e/1e3,kilometres:e/1e3,meters:e,metres:e,miles:e/1609.344,millimeters:1e3*e,millimetres:1e3*e,nauticalmiles:e/1852,radians:1,yards:1.0936*e},i={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046};function f(e,t,r){var o={type:"Feature"};return 0!==(r=void 0===r?{}:r).id&&!r.id||(o.id=r.id),r.bbox&&(o.bbox=r.bbox),o.properties=t||{},o.geometry=e,o}function d(e,t,r){if(void 0===r&&(r={}),!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(p(e[0])&&p(e[1]))return f({type:"Point",coordinates:e},t,r);throw new Error("coordinates must contain numbers")}function s(e,t,r){void 0===r&&(r={});for(var o=0,n=e;o<n.length;o++){var i=n[o];if(i.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var s=0;s<i[i.length-1].length;s++)if(i[i.length-1][s]!==i[0][s])throw new Error("First and last Position are not equivalent.")}return f({type:"Polygon",coordinates:e},t,r)}function y(e,t,r){if(void 0===r&&(r={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return f({type:"LineString",coordinates:e},t,r)}function m(e,t){var r={type:"FeatureCollection"};return(t=void 0===t?{}:t).id&&(r.id=t.id),t.bbox&&(r.bbox=t.bbox),r.features=e,r}function a(e,t,r){return f({type:"MultiLineString",coordinates:e},t,r=void 0===r?{}:r)}function T(e,t,r){return f({type:"MultiPoint",coordinates:e},t,r=void 0===r?{}:r)}function N(e,t,r){return f({type:"MultiPolygon",coordinates:e},t,r=void 0===r?{}:r)}function u(e,t){var r=n[t=void 0===t?"kilometers":t];if(r)return e*r;throw new Error(t+" units is invalid")}function l(e,t){var r=n[t=void 0===t?"kilometers":t];if(r)return e/r;throw new Error(t+" units is invalid")}function c(e){return 180*(e%(2*Math.PI))/Math.PI}function h(e){return e%360*Math.PI/180}function p(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}function g(e){return!!e&&e.constructor===Object}e=Object.freeze({earthRadius:e,factors:n,unitsFactors:{centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/e,yards:1.0936133},areaFactors:i,feature:f,geometry:function(e,t,r){switch(void 0===r&&(r={}),e){case"Point":return d(t).geometry;case"LineString":return y(t).geometry;case"Polygon":return s(t).geometry;case"MultiPoint":return T(t).geometry;case"MultiLineString":return a(t).geometry;case"MultiPolygon":return N(t).geometry;default:throw new Error(e+" is invalid")}},point:d,points:function(e,t,r){return void 0===r&&(r={}),m(e.map(function(e){return d(e,t)}),r)},polygon:s,polygons:function(e,t,r){return void 0===r&&(r={}),m(e.map(function(e){return s(e,t)}),r)},lineString:y,lineStrings:function(e,t,r){return void 0===r&&(r={}),m(e.map(function(e){return y(e,t)}),r)},featureCollection:m,multiLineString:a,multiPoint:T,multiPolygon:N,geometryCollection:function(e,t,r){return f({type:"GeometryCollection",geometries:e},t,r=void 0===r?{}:r)},round:function(e,t){if(!(t=void 0===t?0:t)||0<=t)return t=Math.pow(10,t||0),Math.round(e*t)/t;throw new Error("precision must be a positive number")},radiansToLength:u,lengthToRadians:l,lengthToDegrees:function(e,t){return c(l(e,t))},bearingToAzimuth:function(e){return(e%=360)<0&&(e+=360),e},radiansToDegrees:c,degreesToRadians:h,convertLength:function(e,t,r){if(void 0===t&&(t="kilometers"),void 0===r&&(r="kilometers"),0<=e)return u(l(e,t),r);throw new Error("length must be a positive number")},convertArea:function(e,t,r){if(void 0===t&&(t="meters"),void 0===r&&(r="kilometers"),!(0<=e))throw new Error("area must be a positive number");if(!(t=i[t]))throw new Error("invalid original units");if(r=i[r])return e/t*r;throw new Error("invalid final units")},isNumber:p,isObject:g,validateBBox:function(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach(function(e){if(!p(e))throw new Error("bbox must only contain numbers")})},validateId:function(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(void 0===e?"undefined":j(e)))throw new Error("id must be a number or a string")}});function w(e,t,r){if(null!==e)for(var o,n,i,s=0,a=e.type,u="FeatureCollection"===a,l="Feature"===a,c=u?e.features.length:1,h=0;h<c;h++)for(var p,f,d=(f=!!(p=u?e.features[h].geometry:l?e.geometry:e)&&"GeometryCollection"===p.type)?p.geometries.length:1,y=0;y<d;y++){var m=0,g=0,v=f?p.geometries[y]:p;if(null!==v){var b=v.coordinates,_=v.type,M=!r||"Polygon"!==_&&"MultiPolygon"!==_?0:1;switch(_){case null:break;case"Point":if(!1===t(b,s,h,m,g))return!1;s++,m++;break;case"LineString":case"MultiPoint":for(o=0;o<b.length;o++){if(!1===t(b[o],s,h,m,g))return!1;s++,"MultiPoint"===_&&m++}"LineString"===_&&m++;break;case"Polygon":case"MultiLineString":for(o=0;o<b.length;o++){for(n=0;n<b[o].length-M;n++){if(!1===t(b[o][n],s,h,m,g))return!1;s++}"MultiLineString"===_&&m++,"Polygon"===_&&g++}"Polygon"===_&&m++;break;case"MultiPolygon":for(o=0;o<b.length;o++){for(n=g=0;n<b[o].length;n++){for(i=0;i<b[o][n].length-M;i++){if(!1===t(b[o][n][i],s,h,m,g))return!1;s++}g++}m++}break;case"GeometryCollection":for(o=0;o<v.geometries.length;o++)if(!1===w(v.geometries[o],t,r))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}function R(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length&&!1!==t(e.features[r].properties,r);r++);break;case"Feature":t(e.properties,0)}}function v(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var r=0;r<e.features.length&&!1!==t(e.features[r],r);r++);}function t(e,t){for(var r,o,n,i,s,a,u,l,c,h=0,p="FeatureCollection"===e.type,f="Feature"===e.type,d=p?e.features.length:1,y=0;y<d;y++){for(s=p?e.features[y].geometry:f?e.geometry:e,u=p?e.features[y].properties:f?e.properties:{},l=p?e.features[y].bbox:f?e.bbox:void 0,c=p?e.features[y].id:f?e.id:void 0,i=(a=!!s&&"GeometryCollection"===s.type)?s.geometries.length:1,o=0;o<i;o++)if(null===(n=a?s.geometries[o]:s)){if(!1===t(null,h,u,l,c))return!1}else switch(n.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===t(n,h,u,l,c))return!1;break;case"GeometryCollection":for(r=0;r<n.geometries.length;r++)if(!1===t(n.geometries[r],h,u,l,c))return!1;break;default:throw new Error("Unknown Geometry Type")}h++}}function r(e,l){t(e,function(e,t,r,o,n){var i,s=null===e?null:e.type;switch(s){case null:case"Point":case"LineString":case"Polygon":return!1===l(f(e,r,{bbox:o,id:n}),t,0)?!1:void 0}switch(s){case"MultiPoint":i="Point";break;case"MultiLineString":i="LineString";break;case"MultiPolygon":i="Polygon"}for(var a=0;a<e.coordinates.length;a++){var u=e.coordinates[a];if(!1===l(f({type:i,coordinates:u},r),t,a))return!1}})}function I(e,f){r(e,function(i,s,a){var u=0;if(i.geometry){var l,c,h,p,e=i.geometry.type;if("Point"!==e&&"MultiPoint"!==e)return p=h=c=0,!1!==w(i,function(e,t,r,o,n){return void 0===l||c<s||h<o||p<n?(l=e,c=s,h=o,p=n,void(u=0)):(o=y([l,e],i.properties),!1!==f(o,s,a,n,u)&&(u++,void(l=e)))})&&void 0}})}function q(e,s){if(!e)throw new Error("geojson is required");r(e,function(e,t,r){if(null!==e.geometry){var o=e.geometry.type,n=e.geometry.coordinates;switch(o){case"LineString":if(!1===s(e,t,r,0,0))return!1;break;case"Polygon":for(var i=0;i<n.length;i++)if(!1===s(y(n[i],e.properties),t,r,i))return!1}}})}var J=Object.freeze({coordAll:function(e){var t=[];return w(e,function(e){t.push(e)}),t},coordEach:w,coordReduce:function(e,i,s,t){var a=s;return w(e,function(e,t,r,o,n){a=0===t&&void 0===s?e:i(a,e,t,r,o,n)},t),a},featureEach:v,featureReduce:function(e,r,o){var n=o;return v(e,function(e,t){n=0===t&&void 0===o?e:r(n,e,t)}),n},findPoint:function(e,t){if(!g(t=t||{}))throw new Error("options is invalid");var r,o=t.featureIndex||0,n=t.multiFeatureIndex||0,i=t.geometryIndex||0,s=t.coordIndex||0,a=t.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),a=a||e.features[o].properties,r=e.features[o].geometry;break;case"Feature":a=a||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var u=r.coordinates;switch(r.type){case"Point":return d(u,a,t);case"MultiPoint":return d(u[n=n<0?u.length+n:n],a,t);case"LineString":return d(u[s=s<0?u.length+s:s],a,t);case"Polygon":return i<0&&(i=u.length+i),s<0&&(s=u[i].length+s),d(u[i][s],a,t);case"MultiLineString":return n<0&&(n=u.length+n),s<0&&(s=u[n].length+s),d(u[n][s],a,t);case"MultiPolygon":return n<0&&(n=u.length+n),i<0&&(i=u[n].length+i),s<0&&(s=u[n][i].length-s),d(u[n][i][s],a,t)}throw new Error("geojson is invalid")},findSegment:function(e,t){if(!g(t=t||{}))throw new Error("options is invalid");var r,o=t.featureIndex||0,n=t.multiFeatureIndex||0,i=t.geometryIndex||0,s=t.segmentIndex||0,a=t.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),a=a||e.features[o].properties,r=e.features[o].geometry;break;case"Feature":a=a||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var u=r.coordinates;switch(r.type){case"Point":case"MultiPoint":return null;case"LineString":return y([u[s=s<0?u.length+s-1:s],u[s+1]],a,t);case"Polygon":return i<0&&(i=u.length+i),s<0&&(s=u[i].length+s-1),y([u[i][s],u[i][s+1]],a,t);case"MultiLineString":return n<0&&(n=u.length+n),s<0&&(s=u[n].length+s-1),y([u[n][s],u[n][s+1]],a,t);case"MultiPolygon":return n<0&&(n=u.length+n),i<0&&(i=u[n].length+i),s<0&&(s=u[n][i].length-s-1),y([u[n][i][s],u[n][i][s+1]],a,t)}throw new Error("geojson is invalid")},flattenEach:r,flattenReduce:function(e,o,n){var i=n;return r(e,function(e,t,r){i=0===t&&0===r&&void 0===n?e:o(i,e,t,r)}),i},geomEach:t,geomReduce:function(e,i,s){var a=s;return t(e,function(e,t,r,o,n){a=0===t&&void 0===s?e:i(a,e,t,r,o,n)}),a},lineEach:q,lineReduce:function(e,n,i){var s=i;return q(e,function(e,t,r,o){s=0===t&&void 0===i?e:n(s,e,t,r,o)}),s},propEach:R,propReduce:function(e,r,o){var n=o;return R(e,function(e,t){n=0===t&&void 0===o?e:r(n,e,t)}),n},segmentEach:I,segmentReduce:function(e,i,s){var a=s,u=!1;return I(e,function(e,t,r,o,n){a=!1===u&&void 0===s?e:i(a,e,t,r,o,n),u=!0}),a}});function D(t){var r=[];return"FeatureCollection"===t.type?v(t,function(t){w(t,function(e){r.push(d(e,t.properties))})}):w(t,function(e){r.push(d(e,t.properties))}),m(r)}function z(e){if(!e)throw new Error("geojson is required");var t=[];return r(e,function(e){t.push(e)}),m(t)}var U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};function V(e){if(!e)throw new Error("geojson is required");switch(e.type){case"Feature":return W(e);case"FeatureCollection":return t=e,r={type:"FeatureCollection"},Object.keys(t).forEach(function(e){switch(e){case"type":case"features":return;default:r[e]=t[e]}}),r.features=t.features.map(W),r;case"Point":case"LineString":case"Polygon":case"MultiPoint":case"MultiLineString":case"MultiPolygon":case"GeometryCollection":return H(e);default:throw new Error("unknown GeoJSON type")}var t,r}function W(t){var r={type:"Feature"};return Object.keys(t).forEach(function(e){switch(e){case"type":case"properties":case"geometry":return;default:r[e]=t[e]}}),r.properties=function r(o){var n={};if(!o)return n;Object.keys(o).forEach(function(e){var t=o[e];"object"===(void 0===t?"undefined":U(t))?null===t?n[e]=null:Array.isArray(t)?n[e]=t.map(function(e){return e}):n[e]=r(t):n[e]=t});return n}(t.properties),r.geometry=H(t.geometry),r}function H(e){var t={type:e.type};return e.bbox&&(t.bbox=e.bbox),"GeometryCollection"===e.type?t.geometries=e.geometries.map(H):t.coordinates=function t(e){if("object"!==U(e[0]))return e.slice();return e.map(function(e){return t(e)})}(e.coordinates),t}function b(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return e.geometry.coordinates;if("Point"===e.type)return e.coordinates}if(Array.isArray(e)&&2<=e.length&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return e;throw new Error("coord must be GeoJSON Point or an Array of numbers")}function _(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}function K(e){return"Feature"===e.type?e.geometry:e}function M(e,t,r){void 0===r&&(r={});var e=b(e),t=b(t),o=h(t[1]-e[1]),n=h(t[0]-e[0]),e=h(e[1]),t=h(t[1]),o=Math.pow(Math.sin(o/2),2)+Math.pow(Math.sin(n/2),2)*Math.cos(e)*Math.cos(t);return u(2*Math.atan2(Math.sqrt(o),Math.sqrt(1-o)),r.units)}function Q(e,t,r){if(!0===(r=void 0===r?{}:r).final)return(Q(t,e)+180)%360;var r=b(e),e=b(t),t=h(r[0]),o=h(e[0]),r=h(r[1]),e=h(e[1]),n=Math.sin(o-t)*Math.cos(e),r=Math.cos(r)*Math.sin(e)-Math.sin(r)*Math.cos(e)*Math.cos(o-t);return c(Math.atan2(n,r))}function Z(e,t,r,o){void 0===o&&(o={});var e=b(e),n=h(e[0]),e=h(e[1]),r=h(r),t=l(t,o.units),i=Math.asin(Math.sin(e)*Math.cos(t)+Math.cos(e)*Math.sin(t)*Math.cos(r));return d([c(n+Math.atan2(Math.sin(r)*Math.sin(t)*Math.cos(e),Math.cos(t)-Math.sin(e)*Math.sin(i))),c(i)],o.properties)}function $(e){if(!e)throw new Error("geojson is required");var i=[];return r(e,function(e){var t=e,r=i,o=[],n=t.geometry;if(null!==n){switch(n.type){case"Polygon":o=_(n);break;case"LineString":o=[_(n)]}o.forEach(function(e){var s,a;s=t.properties,a=[],e.reduce(function(e,t){var r,o,n,i=y([e,t],s);return i.bbox=(r=t,o=(e=e)[0],e=e[1],n=r[0],r=r[1],[o<n?o:n,e<r?e:r,n<o?o:n,r<e?e:r]),a.push(i),t}),a.forEach(function(e){e.id=r.length,r.push(e)})})}}),m(i)}function ee(e,t,r,o,n){!function e(t,r,o,n,i){for(;o<n;){600<n-o&&(s=n-o+1,c=r-o+1,u=Math.log(s),a=.5*Math.exp(2*u/3),u=.5*Math.sqrt(u*a*(s-a)/s)*(c-s/2<0?-1:1),l=Math.max(o,Math.floor(r-c*a/s+u)),c=Math.min(n,Math.floor(r+(s-c)*a/s+u)),e(t,r,l,c,i));var s,a,u,l,c,h=t[r],p=o,f=n;for(P(t,o,r),0<i(t[n],h)&&P(t,o,n);p<f;){for(P(t,p,f),p++,f--;i(t[p],h)<0;)p++;for(;0<i(t[f],h);)f--}0===i(t[o],h)?P(t,o,f):P(t,++f,n),f<=r&&(o=f+1),r<=f&&(n=f-1)}}(e,t,r||0,o||e.length-1,n||te)}function P(e,t,r){var o=e[t];e[t]=e[r],e[r]=o}function te(e,t){return e<t?-1:t<e?1:0}x.prototype.all=function(){return this._all(this.data,[])},x.prototype.search=function(e){var t=this.data,r=[];if(!F(e,t))return r;for(var o=this.toBBox,n=[];t;){for(var i=0;i<t.children.length;i++){var s=t.children[i],a=t.leaf?o(s):s;F(e,a)&&(t.leaf?r.push(s):se(e,a)?this._all(s,r):n.push(s))}t=n.pop()}return r},x.prototype.collides=function(e){var t=this.data;if(!F(e,t))return!1;for(var r=[];t;){for(var o=0;o<t.children.length;o++){var n=t.children[o],i=t.leaf?this.toBBox(n):n;if(F(e,i)){if(t.leaf||se(e,i))return!0;r.push(n)}}t=r.pop()}return!1},x.prototype.load=function(e){if(!e||!e.length)return this;if(e.length<this._minEntries){for(var t=0;t<e.length;t++)this.insert(e[t]);return this}var r,o=this._build(e.slice(),0,e.length-1,0);return this.data.children.length?this.data.height===o.height?this._splitRoot(this.data,o):(this.data.height<o.height&&(r=this.data,this.data=o,o=r),this._insert(o,this.data.height-o.height-1,!0)):this.data=o,this},x.prototype.insert=function(e){return e&&this._insert(e,this.data.height-1),this},x.prototype.clear=function(){return this.data=A([]),this},x.prototype.remove=function(e,t){if(!e)return this;for(var r=this.data,o=this.toBBox(e),n=[],i=[],s=void 0,a=void 0,u=void 0;r||n.length;){if(r||(r=n.pop(),a=n[n.length-1],s=i.pop(),u=!0),r.leaf){var l=function(e,t,r){if(!r)return t.indexOf(e);for(var o=0;o<t.length;o++)if(r(e,t[o]))return o;return-1}(e,r.children,t);if(-1!==l)return r.children.splice(l,1),n.push(r),this._condense(n),this}u||r.leaf||!se(r,o)?a?(s++,r=a.children[s],u=!1):r=null:(n.push(r),i.push(s),r=(a=r).children[s=0])}return this},x.prototype.toBBox=function(e){return e},x.prototype.compareMinX=function(e,t){return e.minX-t.minX},x.prototype.compareMinY=function(e,t){return e.minY-t.minY},x.prototype.toJSON=function(){return this.data},x.prototype.fromJSON=function(e){return this.data=e,this},x.prototype._all=function(e,t){for(var r=[];e;)e.leaf?t.push.apply(t,e.children):r.push.apply(r,e.children),e=r.pop();return t},x.prototype._build=function(e,t,r,o){var n=r-t+1,i=this._maxEntries,s=void 0;if(n<=i)return S(s=A(e.slice(t,r+1)),this.toBBox),s;o||(o=Math.ceil(Math.log(n)/Math.log(i)),i=Math.ceil(n/Math.pow(i,o-1))),(s=A([])).leaf=!1,s.height=o;var a=Math.ceil(n/i),u=a*Math.ceil(Math.sqrt(i));ae(e,t,r,u,this.compareMinX);for(var l=t;l<=r;l+=u){var c=Math.min(l+u-1,r);ae(e,l,c,a,this.compareMinY);for(var h=l;h<=c;h+=a){var p=Math.min(h+a-1,c);s.children.push(this._build(e,h,p,o-1))}}return S(s,this.toBBox),s},x.prototype._chooseSubtree=function(e,t,r,o){for(;;){if(o.push(t),t.leaf||o.length-1===r)break;for(var n=1/0,i=1/0,s=void 0,a=0;a<t.children.length;a++){var u=t.children[a],l=ie(u),c=(h=e,c=u,(Math.max(c.maxX,h.maxX)-Math.min(c.minX,h.minX))*(Math.max(c.maxY,h.maxY)-Math.min(c.minY,h.minY))-l);c<i?(i=c,n=l<n?l:n,s=u):c===i&&l<n&&(n=l,s=u)}t=s||t.children[0]}var h,c;return t},x.prototype._insert=function(e,t,r){var r=r?e:this.toBBox(e),o=[],n=this._chooseSubtree(r,this.data,t,o);for(n.children.push(e),L(n,r);0<=t&&o[t].children.length>this._maxEntries;)this._split(o,t),t--;this._adjustParentBBoxes(r,o,t)},x.prototype._split=function(e,t){var r=e[t],o=r.children.length,n=this._minEntries,n=(this._chooseSplitAxis(r,n,o),this._chooseSplitIndex(r,n,o)),o=A(r.children.splice(n,r.children.length-n));o.height=r.height,o.leaf=r.leaf,S(r,this.toBBox),S(o,this.toBBox),t?e[t-1].children.push(o):this._splitRoot(r,o)},x.prototype._splitRoot=function(e,t){this.data=A([e,t]),this.data.height=e.height+1,this.data.leaf=!1,S(this.data,this.toBBox)},x.prototype._chooseSplitIndex=function(e,t,r){for(var o,n,i,s=void 0,a=1/0,u=1/0,l=t;l<=r-t;l++){var c=E(e,0,l,this.toBBox),h=E(e,l,r,this.toBBox),p=(o=c,p=h,f=i=n=void 0,n=Math.max(o.minX,p.minX),i=Math.max(o.minY,p.minY),f=Math.min(o.maxX,p.maxX),o=Math.min(o.maxY,p.maxY),Math.max(0,f-n)*Math.max(0,o-i)),f=ie(c)+ie(h);p<a?(a=p,s=l,u=f<u?f:u):p===a&&f<u&&(u=f,s=l)}return s||r-t},x.prototype._chooseSplitAxis=function(e,t,r){var o=e.leaf?this.compareMinX:oe,n=e.leaf?this.compareMinY:ne;this._allDistMargin(e,t,r,o)<this._allDistMargin(e,t,r,n)&&e.children.sort(o)},x.prototype._allDistMargin=function(e,t,r,o){e.children.sort(o);for(var n=this.toBBox,i=E(e,0,t,n),s=E(e,r-t,r,n),a=k(i)+k(s),u=t;u<r-t;u++){var l=e.children[u];L(i,e.leaf?n(l):l),a+=k(i)}for(var c=r-t-1;t<=c;c--){var h=e.children[c];L(s,e.leaf?n(h):h),a+=k(s)}return a},x.prototype._adjustParentBBoxes=function(e,t,r){for(var o=r;0<=o;o--)L(t[o],e)},x.prototype._condense=function(e){for(var t,r=e.length-1;0<=r;r--)0===e[r].children.length?0<r?(t=e[r-1].children).splice(t.indexOf(e[r]),1):this.clear():S(e[r],this.toBBox)};var re=x;function x(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:9,t=this,r=x;if(!(t instanceof r))throw new TypeError("Cannot call a class as a function");this._maxEntries=Math.max(4,e),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()}function S(e,t){E(e,0,e.children.length,t,e)}function E(e,t,r,o,n){(n=n||A(null)).minX=1/0,n.minY=1/0,n.maxX=-1/0,n.maxY=-1/0;for(var i=t;i<r;i++){var s=e.children[i];L(n,e.leaf?o(s):s)}return n}function L(e,t){e.minX=Math.min(e.minX,t.minX),e.minY=Math.min(e.minY,t.minY),e.maxX=Math.max(e.maxX,t.maxX),e.maxY=Math.max(e.maxY,t.maxY)}function oe(e,t){return e.minX-t.minX}function ne(e,t){return e.minY-t.minY}function ie(e){return(e.maxX-e.minX)*(e.maxY-e.minY)}function k(e){return e.maxX-e.minX+(e.maxY-e.minY)}function se(e,t){return e.minX<=t.minX&&e.minY<=t.minY&&t.maxX<=e.maxX&&t.maxY<=e.maxY}function F(e,t){return t.minX<=e.maxX&&t.minY<=e.maxY&&t.maxX>=e.minX&&t.maxY>=e.minY}function A(e){return{children:e,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function ae(e,t,r,o,n){for(var i,s=[t,r];s.length;)(r=s.pop())-(t=s.pop())<=o||(ee(e,i=t+Math.ceil((r-t)/o/2)*o,t,r,n),s.push(t,i,i,r))}var ue=Object.freeze({default:re});function O(e){var t=[1/0,1/0,-1/0,-1/0];return w(e,function(e){t[0]>e[0]&&(t[0]=e[0]),t[1]>e[1]&&(t[1]=e[1]),t[2]<e[0]&&(t[2]=e[0]),t[3]<e[1]&&(t[3]=e[1])}),t}O.default=O;var le=Object.freeze({default:O}),C=ue&&re,B=(le&&O).default,ce=J.featureEach,he=e.featureCollection;function pe(e){e=new C(e);return e.insert=function(e){if("Feature"!==e.type)throw new Error("invalid feature");return e.bbox=e.bbox||B(e),C.prototype.insert.call(this,e)},e.load=function(e){var t=[];return Array.isArray(e)?e.forEach(function(e){if("Feature"!==e.type)throw new Error("invalid features");e.bbox=e.bbox||B(e),t.push(e)}):ce(e,function(e){if("Feature"!==e.type)throw new Error("invalid features");e.bbox=e.bbox||B(e),t.push(e)}),C.prototype.load.call(this,t)},e.remove=function(e,t){if("Feature"!==e.type)throw new Error("invalid feature");return e.bbox=e.bbox||B(e),C.prototype.remove.call(this,e,t)},e.clear=function(){return C.prototype.clear.call(this)},e.search=function(e){e=C.prototype.search.call(this,this.toBBox(e));return he(e)},e.collides=function(e){return C.prototype.collides.call(this,this.toBBox(e))},e.all=function(){var e=C.prototype.all.call(this);return he(e)},e.toJSON=function(){return C.prototype.toJSON.call(this)},e.fromJSON=function(e){return C.prototype.fromJSON.call(this,e)},e.toBBox=function(e){var t;if(e.bbox)t=e.bbox;else if(Array.isArray(e)&&4===e.length)t=e;else if(Array.isArray(e)&&6===e.length)t=[e[0],e[1],e[3],e[4]];else if("Feature"===e.type)t=B(e);else{if("FeatureCollection"!==e.type)throw new Error("invalid geojson");t=B(e)}return{minX:t[0],minY:t[1],maxX:t[2],maxY:t[3]}},e}var X=pe;function fe(e,t){e=_(e),t=_(t);if(2!==e.length)throw new Error("<intersects> line1 must only contain 2 coordinates");if(2!==t.length)throw new Error("<intersects> line2 must only contain 2 coordinates");var r=e[0][0],o=e[0][1],n=e[1][0],e=e[1][1],i=t[0][0],s=t[0][1],a=t[1][0],t=t[1][1],u=(t-s)*(n-r)-(a-i)*(e-o),a=(a-i)*(o-s)-(t-s)*(r-i),t=(n-r)*(o-s)-(e-o)*(r-i);if(0==u)return null;s=a/u,i=t/u;return 0<=s&&s<=1&&0<=i&&i<=1?d([r+s*(n-r),o+s*(e-o)]):null}function de(e,l,c){void 0===c&&(c={});var h=d([1/0,1/0],{dist:1/0}),p=0;return r(e,function(e){for(var t=_(e),r=0;r<t.length-1;r++){var o=d(t[r]),n=(o.properties.dist=M(l,o,c),d(t[r+1])),i=(n.properties.dist=M(l,n,c),M(o,n,c)),s=Math.max(o.properties.dist,n.properties.dist),a=Q(o,n),u=Z(l,s,a+90,c),s=Z(l,s,a-90,c),a=function(e,t){var r,o={},n=[];if("LineString"===e.type&&(e=f(e)),"LineString"===t.type&&(t=f(t)),"Feature"===e.type&&"Feature"===t.type&&null!==e.geometry&&null!==t.geometry&&"LineString"===e.geometry.type&&"LineString"===t.geometry.type&&2===e.geometry.coordinates.length&&2===t.geometry.coordinates.length)return(r=fe(e,t))&&n.push(r),m(n);var i=X();return i.load($(t)),v($(e),function(r){v(i.search(r),function(e){var t,e=fe(r,e);e&&(t=_(e).join(","),o[t]||(o[t]=!0,n.push(e)))})}),m(n)}(y([u.geometry.coordinates,s.geometry.coordinates]),y([o.geometry.coordinates,n.geometry.coordinates])),u=null;0<a.features.length&&((u=a.features[0]).properties.dist=M(l,u,c),u.properties.location=p+M(o,u,c)),o.properties.dist<h.properties.dist&&((h=o).properties.index=r,h.properties.location=p),n.properties.dist<h.properties.dist&&((h=n).properties.index=r+1,h.properties.location=p+i),u&&u.properties.dist<h.properties.dist&&((h=u).properties.index=r),p+=i}}),h}X.default=pe;function ye(e,t){void 0===t&&(t={});var r,o,n,i,s,a=K(e);switch(t.properties||"Feature"!==e.type||(t.properties=e.properties),a.type){case"Polygon":return void 0===(i=t)&&(i={}),s=K(n=a).coordinates,i=i.properties||("Feature"===n.type?n.properties:{}),me(s,i);case"MultiPolygon":return void 0===(n=t)&&(n={}),i=K(s=a).coordinates,r=n.properties||("Feature"===s.type?s.properties:{}),o=[],i.forEach(function(e){o.push(me(e,r))}),m(o);default:throw new Error("invalid poly")}}function me(e,t){return 1<e.length?a(e,t):y(e[0],t)}function ge(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);if(e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t)if(Object.setPrototypeOf)Object.setPrototypeOf(e,t);else for(var r=e,o=t,n=Object.getOwnPropertyNames(o),i=0;i<n.length;i++){var s=n[i],a=Object.getOwnPropertyDescriptor(o,s);a&&a.configurable&&void 0===r[s]&&Object.defineProperty(r,s,a)}}var ve,be=o.INTERNAL_LAYER_PREFIX+"cxiaof_autoadsorb",ue=(ge(Y,ve=o.Class),Y.prototype.setMode=function(e){return this.options.mode=e,this._updateGeosSet(),this},Y.prototype.getMode=function(){return this.options.mode},Y.prototype.setDistance=function(e){return this.options.distance=e,this._updateGeosSet(),this},Y.prototype.getDistance=function(){return this.options.distance},Y.prototype.isEnable=function(){return this._isEnable},Y.prototype.bindDrawTool=function(e){return e instanceof o.DrawTool&&(this._map||this._addTo(e.getMap()),(this._drawTool=e).on("enable",this._enable,this),e.on("disable remove",this._disable,this),e.isEnabled()&&this._enable()),this},Y.prototype.bindGeometry=function(e){return e instanceof o.Geometry&&(this._map||this._addTo(drawTool.getMap()),this._disableMapTool(),this._geometry=e,this._geometryCoords=e.getCoordinates(),e.on("editstart",this._enable,this),e.on("editend remove",this._disable,this),e.isEditing()&&this._enable()),this},Y.prototype.remove=function(){this._disable(),this._cursorLayer&&this._cursorLayer.remove(),delete this._needDeal,delete this._treePoints,delete this._treeLines,delete this._cursorLayer,delete this._assistLayers,delete this._mousePoint,delete this._geosSetPoint,delete this._geosSetLine,delete this._cursor,delete this._adsorbPoint,delete this._drawTool,delete this._map},Y.prototype._addTo=function(e){this._map=e,this._newCursorLayer(),this._saveAdsorbLayers()},Y.prototype._newCursorLayer=function(){this._cursorLayer=new o.VectorLayer(be,{style:{symbol:this.options.cursorSymbol}}),this._cursorLayer.addTo(this._map).bringToFront()},Y.prototype._saveAdsorbLayers=function(){var t=this;this._assistLayers=[],this.options.layers.forEach(function(e){(e="string"==typeof e?t._map.getLayer(e):e)instanceof o.VectorLayer&&t._assistLayers.push(e)})},Y.prototype._enable=function(){this._isEnable=!0,this._cursorLayer&&this._cursorLayer.show(),this._updateGeosSet(),map.on("mousedown",this._mapMousedown,this),map.on("mouseup",this._mapMouseup,this),map.on("mousemove",this._mapMousemove,this)},Y.prototype._mapMousedown=function(){this._needFindGeometry=!!this._geometry},Y.prototype._mapMouseup=function(){this._needFindGeometry=!this._geometry},Y.prototype._mapMousemove=function(e){var t=e.coordinate,e=e.domEvent;this._needDeal=!0,this._mousePoint=t,this._cursor?this._cursor.setCoordinates(t):(this._cursor=new o.Marker(t),this._cursor.addTo(this._cursorLayer)),delete this._adsorbPoint,this.options.needCtrl===e.ctrlKey&&this._updateAdsorbPoint(t)},Y.prototype._updateAdsorbPoint=function(e){var t;this._needFindGeometry&&(0<(e=this._findGeometry(e)).length&&(this._adsorbPoint=this._getAdsorbPoint(e)),this._adsorbPoint&&(t=(e=this._adsorbPoint).x,e=e.y,this._cursor.setCoordinates([t,e])))},Y.prototype._findGeometry=function(e){var t,r=[];return 0<this._geosSetPoint.length&&(t=this._findAvailGeos(this._treePoints,e),r=r.concat(t)),0<this._geosSetLine.length&&(t=this._findAvailGeos(this._treeLines,e),r=r.concat(t)),r},Y.prototype._findAvailGeos=function(e,t){t=this._createInspectExtent(t);return e.search(t).features},Y.prototype._createInspectExtent=function(e){var t=this._map.pixelToDistance(0,this.options.distance);return new o.Circle(e,t,{properties:{},numberOfShellPoints:this.options.shellPoints}).toGeoJSON()},Y.prototype._getAdsorbPoint=function(e){var t=[this._mousePoint.x,this._mousePoint.y],r=e.filter(function(e){return"Point"===e.geometry.type}),e=(0<r.length?this._getNearestPoint(t,r):(r=e.filter(function(e){return"LineString"===e.geometry.type}),this._getNearestPointOnLine(t,r))).geometry.coordinates;return{x:e[0],y:e[1]}},Y.prototype._getNearestPoint=function(e,t){var r=e,e={type:"FeatureCollection",features:t};if(!r)throw new Error("targetPoint is required");if(!e)throw new Error("points is required");var o=1/0,n=0;return v(e,function(e,t){e=M(r,e);e<o&&(n=t,o=e)}),(e=V(e.features[n])).properties.featureIndex=n,e.properties.distanceToPoint=o,e},Y.prototype._getNearestPointOnLine=function(e,t){var o;return o={MultiPoint:{coordinates:[],properties:[]},MultiLineString:{coordinates:[],properties:[]},MultiPolygon:{coordinates:[],properties:[]}},v({type:"FeatureCollection",features:t},function(e){var t,r;switch(null==(r=e.geometry)?void 0:r.type){case"Point":o.MultiPoint.coordinates.push(e.geometry.coordinates),o.MultiPoint.properties.push(e.properties);break;case"MultiPoint":(t=o.MultiPoint.coordinates).push.apply(t,e.geometry.coordinates),o.MultiPoint.properties.push(e.properties);break;case"LineString":o.MultiLineString.coordinates.push(e.geometry.coordinates),o.MultiLineString.properties.push(e.properties);break;case"MultiLineString":(t=o.MultiLineString.coordinates).push.apply(t,e.geometry.coordinates),o.MultiLineString.properties.push(e.properties);break;case"Polygon":o.MultiPolygon.coordinates.push(e.geometry.coordinates),o.MultiPolygon.properties.push(e.properties);break;case"MultiPolygon":(t=o.MultiPolygon.coordinates).push.apply(t,e.geometry.coordinates),o.MultiPolygon.properties.push(e.properties)}}),de(m(Object.keys(o).filter(function(e){return o[e].coordinates.length}).sort().map(function(e){return f({type:e,coordinates:o[e].coordinates},{collectedProperties:o[e].properties})})),e)},Y.prototype._updateGeosSet=function(){this._geosSetPoint=[],this._geosSetLine=[];var e=this._getAllAssistGeos();["auto","vertux"].includes(this.options.mode)&&(this._geosSetPoint=this._parseToPoints(e)),["auto","border"].includes(this.options.mode)&&(this._geosSetLine=this._parseToLines(e)),this._updateRBushTree()},Y.prototype._getAllAssistGeos=function(){return this._assistLayers.reduce(function(e,t){return e.concat(t.getGeometries())},[])},Y.prototype._parseToPoints=function(e){var t=this,r=[];return e.forEach(function(e){r=(e instanceof o.GeometryCollection||(e instanceof o.Circle||e instanceof o.Ellipse)&&((e=e.copy()).setOptions(Object.assign(e.options||{},{numberOfShellPoints:t.options.shellPoints})),r.push(t._getCenterFeature(e))),r.concat(D(e.toGeoJSON()).features))}),r},Y.prototype._getCenterFeature=function(e){return{type:"Feature",geometry:{type:"Point",coordinates:e.getCenter().toArray()},properties:{}}},Y.prototype._parseToLines=function(e){var t=this,r=[];return(e=e.filter(function(e){return!(e instanceof o.Marker||e instanceof o.MultiPoint)})).forEach(function(e){e instanceof o.LineString?r.push(e.toGeoJSON()):r=e instanceof o.MultiLineString?r.concat(z(e.toGeoJSON()).features):((e instanceof o.Circle||e instanceof o.Ellipse)&&(e=e.copy()).setOptions(Object.assign(e.options||{},{numberOfShellPoints:t.options.shellPoints})),r.concat(t._polygonToLine(e.toGeoJSON())))}),this._splitLines(r)},Y.prototype._polygonToLine=function(e){e=ye(e);return"Feature"===e.type?z(e).features:e.features.reduce(function(e,t){return e.concat(z(t).features)},[])},Y.prototype._splitLines=function(e){return e.reduce(function(e,t){for(var r=t.geometry.coordinates,o=0;o<r.length-1;o++){var n=[r[o],r[o+1]];e.push({type:"Feature",geometry:{type:"LineString",coordinates:n},properties:{}})}return e},[])},Y.prototype._updateRBushTree=function(){this._treePoints.clear(),this._treePoints.load({type:"FeatureCollection",features:this._geosSetPoint}),this._treeLines.clear(),this._treeLines.load({type:"FeatureCollection",features:this._geosSetLine})},Y.prototype._disable=function(){this._isEnable=!1,this._cursorLayer&&this._cursorLayer.hide(),map.off("mousedown",this._mapMousedown,this),map.off("mousemove",this._mapMousemove,this),map.off("mouseup",this._mapMouseup,this),this._resetGeosSet(),delete this._geometry,delete this._geometryCoords},Y.prototype._resetGeosSet=function(){this._geosSetPoint=[],this._geosSetLine=[]},Y.prototype._disableMapTool=function(){this._map._map_tool&&this._map._map_tool.disable()},Y);function Y(e){if(!(this instanceof Y))throw new TypeError("Cannot call a class as a function");e=function(e,t){if(e)return!t||"object"!=typeof t&&"function"!=typeof t?e:t;throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}(this,ve.call(this,e));return e._isEnable=!1,e._treePoints=X(),e._treeLines=X(),e}ue.mergeOptions({layers:[],mode:"auto",distance:10,shellPoints:60,needCtrl:!1,cursorSymbol:{markerType:"ellipse",markerFill:"#de3333",markerWidth:4,markerHeight:4,markerLineWidth:0}}),G.Autoadsorb=ue,Object.defineProperty(G,"__esModule",{value:!0}),"undefined"!=typeof console&&console.log("maptalks.autoadsorb v0.4.0, requires maptalks@>=0.46.0.")});